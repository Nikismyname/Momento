@*@model ContentCreateSettings

@{
    ViewData["Title"] = "NotesContent";
}

<div class="row flex-end">
    <div id="iframeDiv"class="col-sm-10">
        <div id="video" class="youtube_player_iframe"></div>
    </div>
    <div class="col-sm-2">
        <button type="button" class="btn btn-primary btn-block add-note">Add Note</button>
        <button type="button" class="btn btn-primary btn-block" id="add1" disabled>Sub Note</button>
        <button type="button" class="btn btn-primary btn-block" id="add2" disabled>SSub Note</button>
        <button type="button" class="btn btn-primary btn-block" id="add3" disabled>SSSub Note</button>
        <button type="button" class="btn btn-primary btn-block time-stamp">Time Stamp</button>
        <button type="button" class="btn btn-primary btn-block new-topic-button">New Topic</button>
    </div>
</div>

<form method="post">
    <div asp-validation-summary="All"></div>
    <div class="form-group row">
        <lable for="txtUrl" class="col-sm-2 col-form-label text-right">Url</lable>
        <div class="col-sm-6">
            <input class="form-control-black" asp-for="ContentCreate.Url" type="text" id="txtUrl" />
        </div>
        <div class="col-sm-2">
            <button class="btn btn-secondary" type="button" id="btnPlay">Play</button>
        </div>
    </div>
    <div class="form-group row">
        <lable for="nameInput" class="col-sm-2 col-form-label text-right">Name</lable>
        <div class="col-sm-6">
            <input id="nameInput" class="form-control-black" asp-for="ContentCreate.Name">
        </div>
    </div>
    <div class="form-group row">
        <lable for="descriptionInput" class="col-sm-2 col-form-label text-right">Description</lable>
        <div class="col-sm-6">
            <input id="descriptionInput" class="form-control-black" asp-for="ContentCreate.Description">
        </div>
    </div>
    <input asp-for="ContentCreate.DirectoryId" hidden="hidden" />
    <input id="contentSeekTo" type="number" name="SeekTo" value="" hidden="hidden" />
    <br />
    <br />
    <div id="NewNoteLocation" level=1>
        @foreach (var note in Model.ContentCreate.Notes.Where(x => x.InPageParentId == null).OrderBy(x => x.InPageId))
        {
            @await Html.PartialAsync("_NoteCreatePartial", new ContentCreatePartial { Note = note, Notes = Model.ContentCreate.Notes });
        }
    </div>
    <br />
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-8 flex-end no-padding margin-down-up-2percent">
                <button type="button" class="btn btn-primary btn-block add-note">Add Note</button>
                <button type="button" class="btn btn-primary btn-block" id="start-pause">Start</button>
                <button type="button" class="btn btn-primary btn-block" id="go-back">Go Back</button>
                <button type="button" class="btn btn-primary btn-block time-stamp">Time Stamp</button>
                <button type="button" class="btn btn-primary btn-block new-topic">New Topic</button>
            </div>
        </div>
    </div>
    <button class="btn btn-success" id="submitBtn" type="submit">Save Content</button>
    <a class="btn btn-danger" asp-area="" asp-controller="Directory" asp-action="Index" asp-route-id="@(Model.ContentCreate.DirectoryId)">Don't Save</a>
    <br />
</form>

@{
    var n = Model.ContentCreate.Notes.OrderBy(x => x.InPageId).ToList();
}

@foreach (var i in n)
{
    if (i.Deleted == false)
    {
        <div class="info" id="infoDiv@(i.InPageId)" idd="@(i.InPageId)" pid="@(i.InPageParentId)"></div>
    }
    else
    {
        <div class="info" id="infoDiv@(i.InPageId)" idd="@(i.InPageId)" pid="-1"></div>
    }
}

@section scripts
{
    <script type="text/javascript" src="~/js/Video/createVideoSetUp.js"></script>
    <script type="text/javascript" src="~/js/Video/notesCreate.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            let enumerators = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
                Enum.GetValues(typeof(Formatting)), new Newtonsoft.Json.Converters.StringEnumConverter()))');
            let nextId = @Model.ContentCreate.Notes.Count;

            let notes = [];
            for (var i = 0; i < nextId; i++) {
                let div = $('#infoDiv' + i);
                notes[i] = Number(div.attr('pid')); 
            }

            notesFunction(enumerators, nextId, notes);
        });
    </script>
}*@




